{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/MarissaGvozdenovich/birthday-reminder/src/App.js\";\nimport './App.css';\nimport { People } from './people.js';\nimport './index.css'; //import { useState } from 'react';\n\nvar options = {\n  month: 'long'\n};\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bday-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Birthday Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading3\",\n      children: \"Today's Birthdays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Birthdays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nconst CurrentBdays = People.filter(_c2 = person => thisDay === person.birthday && thisMonth === person.birthmonth);\n_c3 = CurrentBdays;\n\nconst Birthdays = () => {\n  if (CurrentBdays !== []) {\n    for (let item = 0; item < CurrentBdays.length; item++) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"person-img\",\n          src: item.image.default,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"person-name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"person-age\",\n          children: [thisYear - item.birthyear, \" years old\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n\n    ;\n  } else if (CurrentBdays === []) {\n    return 'No birthdays today';\n  }\n};\n\n_c4 = Birthdays;\nexport default App; //FIND WAY TO CLEAR LIST WITH BUTTON\n//FIGURE OUT HOW TO INCLUDE ALL BDAYS FOR TODAY ON THE LIST. NOT JUST FIRST ONE\n//onClick={clearList}\n//const Birthdays = () => {\n// \tfor (let person = 0; person < People.length; person++) {\n// \t\tif (\n// \t\t\tthisDay === People[person].birthday &&\n// \t\t\tthisMonth === People[person].birthmonth\n// \t\t) {\n// \t\t\treturn (\n// \t\t\t\t<>\n// \t\t\t\t\t<img\n// \t\t\t\t\t\tclassName='person-img'\n// \t\t\t\t\t\tsrc={People[person].image.default}\n// \t\t\t\t\t\talt=''\n// \t\t\t\t\t/>\n// \t\t\t\t\t<h4 className='person-name'>{People[person].name}</h4>\n// \t\t\t\t\t<p className='person-age'>\n// \t\t\t\t\t\t{thisYear - People[person].birthyear} years old\n// \t\t\t\t\t</p>\n// \t\t\t\t</>\n// \t\t\t);\n// \t\t}\n// \t}\n// \treturn <p>No birthdays today</p>;\n//};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CurrentBdays$People.filter\");\n$RefreshReg$(_c3, \"CurrentBdays\");\n$RefreshReg$(_c4, \"Birthdays\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/birthday-reminder/src/App.js"],"names":["People","options","month","thisDay","Date","getDate","thisMonth","Intl","DateTimeFormat","format","thisYear","getFullYear","App","CurrentBdays","filter","person","birthday","birthmonth","Birthdays","item","length","image","default","name","birthyear"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,aAAP,C,CACA;;AAEA,IAAIC,OAAO,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAd;AACA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiD,IAAIL,IAAJ,EAAjD,CAAhB;AACA,IAAIM,QAAQ,GAAG,IAAIN,IAAJ,GAAWO,WAAX,EAAf;;AAEA,SAASC,GAAT,GAAe;AACd,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;KAVQA,G;AAYT,MAAMC,YAAY,GAAGb,MAAM,CAACc,MAAP,OACnBC,MAAD,IAAYZ,OAAO,KAAKY,MAAM,CAACC,QAAnB,IAA+BV,SAAS,KAAKS,MAAM,CAACE,UAD5C,CAArB;MAAMJ,Y;;AAIN,MAAMK,SAAS,GAAG,MAAM;AACvB,MAAIL,YAAY,KAAK,EAArB,EAAyB;AACtB,SAAK,IAAIM,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGN,YAAY,CAACO,MAAvC,EAA+CD,IAAI,EAAnD,EACA;AACE,0BACA;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEA,IAAI,CAACE,KAAL,CAAWC,OAA5C;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BH,IAAI,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,qBACGb,QAAQ,GAAGS,IAAI,CAACK,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,sBADA;AAQE;;AAAA;AACN,GAZD,MAYO,IAAIX,YAAY,KAAK,EAArB,EAAyB;AAC/B,WAAO,oBAAP;AACA;AACD,CAhBD;;MAAMK,S;AAkBN,eAAeN,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './App.css';\nimport { People } from './people.js';\nimport './index.css';\n//import { useState } from 'react';\n\nvar options = { month: 'long' };\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n\treturn (\n\t\t<div className='bday-box'>\n\t\t\t<h1 className='app-title'>Birthday Reminder App</h1>\n\t\t\t<h3 className='heading3'>Today's Birthdays</h3>\n\t\t\t<hr></hr>\n\t\t\t<Birthdays />\n\t\t\t<button className='btn'>Clear All</button>\n\t\t</div>\n\t);\n}\n\nconst CurrentBdays = People.filter(\n\t(person) => thisDay === person.birthday && thisMonth === person.birthmonth,\n);\n\nconst Birthdays = () => {\n\tif (CurrentBdays !== []) {\n    for (let item = 0; item < CurrentBdays.length; item++)\n    {\n      return (\n      <>\n        <img className='person-img' src={item.image.default} alt='' />\n        <h4 className='person-name'>{item.name}</h4>\n        <p className='person-age'>\n          {thisYear - item.birthyear} years old\n\t\t\t\t</p>\n      </>\n      )};\n\t} else if (CurrentBdays === []) {\n\t\treturn 'No birthdays today';\n\t}\n};\n\nexport default App;\n\n//FIND WAY TO CLEAR LIST WITH BUTTON\n//FIGURE OUT HOW TO INCLUDE ALL BDAYS FOR TODAY ON THE LIST. NOT JUST FIRST ONE\n//onClick={clearList}\n\n//const Birthdays = () => {\n// \tfor (let person = 0; person < People.length; person++) {\n// \t\tif (\n// \t\t\tthisDay === People[person].birthday &&\n// \t\t\tthisMonth === People[person].birthmonth\n// \t\t) {\n// \t\t\treturn (\n// \t\t\t\t<>\n// \t\t\t\t\t<img\n// \t\t\t\t\t\tclassName='person-img'\n// \t\t\t\t\t\tsrc={People[person].image.default}\n// \t\t\t\t\t\talt=''\n// \t\t\t\t\t/>\n// \t\t\t\t\t<h4 className='person-name'>{People[person].name}</h4>\n// \t\t\t\t\t<p className='person-age'>\n// \t\t\t\t\t\t{thisYear - People[person].birthyear} years old\n// \t\t\t\t\t</p>\n// \t\t\t\t</>\n// \t\t\t);\n// \t\t}\n// \t}\n// \treturn <p>No birthdays today</p>;\n//};\n"]},"metadata":{},"sourceType":"module"}