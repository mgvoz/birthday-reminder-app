{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/MarissaGvozdenovich/birthday-reminder/src/App.js\";\nimport './App.css';\nimport { People } from './people.js';\nimport './index.css'; //import { useState } from 'react';\n\nvar options = {\n  month: 'long'\n};\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bday-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Birthday Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading3\",\n      children: \"Today's Birthdays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Birthdays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App; //FIND WAY TO CLEAR LIST WITH BUTTON\n//FIGURE OUT HOW TO INCLUDE ALL BDAYS FOR TODAY ON THE LIST. NOT JUST FIRST ONE\n//onClick={clearList}\n\nPeople.filter(person);\nlet todaysBdays = [];\n\nconst CurrentBdays = () => {\n  for (let person = 0; person < People.length; person++) {\n    if (thisDay === People[person].birthday && thisMonth === People[person].birthmonth) {\n      todaysBdays.push([People[person].name, People[person].birthyear]);\n    }\n  }\n\n  return todaysBdays;\n};\n\n_c2 = CurrentBdays;\nconsole.log(todaysBdays);\n\nconst Birthdays = () => {\n  CurrentBdays();\n  todaysBdays.forEach(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"person-img\",\n      src: People[item].image.default,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"person-name\",\n      children: People[item].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"person-age\",\n      children: [thisYear - People[item].birthyear, \" years old\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true));\n}; // const Birthdays = () => {\n// \tfor (let person = 0; person < People.length; person++) {\n// \t\tif (\n// \t\t\tthisDay === People[person].birthday &&\n// \t\t\tthisMonth === People[person].birthmonth\n// \t\t) {\n// \t\t\treturn (\n// \t\t\t\t<>\n// \t\t\t\t\t<img\n// \t\t\t\t\t\tclassName='person-img'\n// \t\t\t\t\t\tsrc={People[person].image.default}\n// \t\t\t\t\t\talt=''\n// \t\t\t\t\t/>\n// \t\t\t\t\t<h4 className='person-name'>{People[person].name}</h4>\n// \t\t\t\t\t<p className='person-age'>\n// \t\t\t\t\t\t{thisYear - People[person].birthyear} years old\n// \t\t\t\t\t</p>\n// \t\t\t\t</>\n// \t\t\t);\n// \t\t}\n// \t}\n// \treturn <p>No birthdays today</p>;\n// };\n\n\n_c3 = Birthdays;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CurrentBdays\");\n$RefreshReg$(_c3, \"Birthdays\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/birthday-reminder/src/App.js"],"names":["People","options","month","thisDay","Date","getDate","thisMonth","Intl","DateTimeFormat","format","thisYear","getFullYear","App","filter","person","todaysBdays","CurrentBdays","length","birthday","birthmonth","push","name","birthyear","console","log","Birthdays","forEach","item","image","default"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,aAAP,C,CACA;;AAEA,IAAIC,OAAO,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAd;AACA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiD,IAAIL,IAAJ,EAAjD,CAAhB;AACA,IAAIM,QAAQ,GAAG,IAAIN,IAAJ,GAAWO,WAAX,EAAf;;AAEA,SAASC,GAAT,GAAe;AACd,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;KAVQA,G;AAYT,eAAeA,GAAf,C,CAEA;AACA;AACA;;AAGAZ,MAAM,CAACa,MAAP,CAAcC,MAAd;AAEA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC1B,OAAK,IAAIF,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGd,MAAM,CAACiB,MAArC,EAA6CH,MAAM,EAAnD,EAAuD;AACtD,QACCX,OAAO,KAAKH,MAAM,CAACc,MAAD,CAAN,CAAeI,QAA3B,IACAZ,SAAS,KAAKN,MAAM,CAACc,MAAD,CAAN,CAAeK,UAF9B,EAGE;AACDJ,MAAAA,WAAW,CAACK,IAAZ,CAAiB,CAACpB,MAAM,CAACc,MAAD,CAAN,CAAeO,IAAhB,EAAsBrB,MAAM,CAACc,MAAD,CAAN,CAAeQ,SAArC,CAAjB;AACA;AACD;;AACD,SAAOP,WAAP;AACA,CAVD;;MAAMC,Y;AAYNO,OAAO,CAACC,GAAR,CAAYT,WAAZ;;AAEA,MAAMU,SAAS,GAAG,MAAM;AACvBT,EAAAA,YAAY;AACZD,EAAAA,WAAW,CAACW,OAAZ,CAAqBC,IAAD,iBACnB;AAAA,4BACC;AACC,MAAA,SAAS,EAAC,YADX;AAEC,MAAA,GAAG,EAAE3B,MAAM,CAAC2B,IAAD,CAAN,CAAaC,KAAb,CAAmBC,OAFzB;AAGC,MAAA,GAAG,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,YADD,eAMC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6B7B,MAAM,CAAC2B,IAAD,CAAN,CAAaN;AAA1C;AAAA;AAAA;AAAA;AAAA,YAND,eAOC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,iBACEX,QAAQ,GAAGV,MAAM,CAAC2B,IAAD,CAAN,CAAaL,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA,kBADD;AAaA,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAvCMG,S","sourcesContent":["import './App.css';\nimport { People } from './people.js';\nimport './index.css';\n//import { useState } from 'react';\n\nvar options = { month: 'long' };\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n\treturn (\n\t\t<div className='bday-box'>\n\t\t\t<h1 className='app-title'>Birthday Reminder App</h1>\n\t\t\t<h3 className='heading3'>Today's Birthdays</h3>\n\t\t\t<hr></hr>\n\t\t\t<Birthdays />\n\t\t\t<button className='btn'>Clear All</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n//FIND WAY TO CLEAR LIST WITH BUTTON\n//FIGURE OUT HOW TO INCLUDE ALL BDAYS FOR TODAY ON THE LIST. NOT JUST FIRST ONE\n//onClick={clearList}\n\n\nPeople.filter(person)\n\nlet todaysBdays = [];\n\nconst CurrentBdays = () => {\n\tfor (let person = 0; person < People.length; person++) {\n\t\tif (\n\t\t\tthisDay === People[person].birthday &&\n\t\t\tthisMonth === People[person].birthmonth\n\t\t) {\n\t\t\ttodaysBdays.push([People[person].name, People[person].birthyear]);\n\t\t}\n\t}\n\treturn todaysBdays;\n};\n\nconsole.log(todaysBdays);\n\nconst Birthdays = () => {\n\tCurrentBdays();\n\ttodaysBdays.forEach((item) => (\n\t\t<>\n\t\t\t<img\n\t\t\t\tclassName='person-img'\n\t\t\t\tsrc={People[item].image.default}\n\t\t\t\talt=''\n\t\t\t/>\n\t\t\t<h4 className='person-name'>{People[item].name}</h4>\n\t\t\t<p className='person-age'>\n\t\t\t\t{thisYear - People[item].birthyear} years old\n\t\t\t</p>\n\t\t</>\n\t));\n};\n\n// const Birthdays = () => {\n// \tfor (let person = 0; person < People.length; person++) {\n// \t\tif (\n// \t\t\tthisDay === People[person].birthday &&\n// \t\t\tthisMonth === People[person].birthmonth\n// \t\t) {\n// \t\t\treturn (\n// \t\t\t\t<>\n// \t\t\t\t\t<img\n// \t\t\t\t\t\tclassName='person-img'\n// \t\t\t\t\t\tsrc={People[person].image.default}\n// \t\t\t\t\t\talt=''\n// \t\t\t\t\t/>\n// \t\t\t\t\t<h4 className='person-name'>{People[person].name}</h4>\n// \t\t\t\t\t<p className='person-age'>\n// \t\t\t\t\t\t{thisYear - People[person].birthyear} years old\n// \t\t\t\t\t</p>\n// \t\t\t\t</>\n// \t\t\t);\n// \t\t}\n// \t}\n// \treturn <p>No birthdays today</p>;\n// };\n"]},"metadata":{},"sourceType":"module"}