{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/MarissaGvozdenovich/birthday-reminder/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css';\nimport { People } from './people.js';\nimport './index.css';\nvar options = {\n  month: 'long'\n};\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bday-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Birthday Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Birthdays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}();\n\nconst Birthdays = () => {\n  for (let person = 0; person < People.length; person++) {\n    if (thisDay === People[person].birthday && thisMonth === People[person].birthmonth) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: People[person].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: People[person].birthyear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  }\n};\n\n_c = Birthdays;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Birthdays\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/birthday-reminder/src/App.js"],"names":["People","options","month","thisDay","Date","getDate","thisMonth","Intl","DateTimeFormat","format","thisYear","App","Birthdays","person","length","birthday","birthmonth","name","birthyear"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,aAAP;AAEA,IAAIC,OAAO,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAd;AACA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiD,IAAIL,IAAJ,EAAjD,CAAhB;AACA,IAAIM,QAAQ,GAAG,IAEf,SAASC,GAAT,GAAe;AACd,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CATc,EAAf;;AAWA,MAAMC,SAAS,GAAG,MAAM;AACvB,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGb,MAAM,CAACc,MAArC,EAA6CD,MAAM,EAAnD,EAAuD;AACtD,QACCV,OAAO,KAAKH,MAAM,CAACa,MAAD,CAAN,CAAeE,QAA3B,IACAT,SAAS,KAAKN,MAAM,CAACa,MAAD,CAAN,CAAeG,UAF9B,EAGE;AACD,0BACC;AAAA,gCACC;AAAA,oBAAKhB,MAAM,CAACa,MAAD,CAAN,CAAeI;AAApB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAKjB,MAAM,CAACa,MAAD,CAAN,CAAeK;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA,sBADD;AAMA;AACD;AACD,CAdD;;KAAMN,S;AAgBN,eAAeD,GAAf","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport { People } from './people.js';\nimport './index.css';\n\nvar options = { month: 'long' };\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new\n\nfunction App() {\n\treturn (\n\t\t<div className='bday-box'>\n\t\t\t<h1 className='app-title'>Birthday Reminder App</h1>\n\t\t\t<Birthdays />\n\t\t</div>\n\t);\n}\n\nconst Birthdays = () => {\n\tfor (let person = 0; person < People.length; person++) {\n\t\tif (\n\t\t\tthisDay === People[person].birthday &&\n\t\t\tthisMonth === People[person].birthmonth\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<h4>{People[person].name}</h4>\n\t\t\t\t\t<p>{(People[person].birthyear)}</p>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t}\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}