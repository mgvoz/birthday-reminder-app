{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/MarissaGvozdenovich/birthday-reminder/src/App.js\";\nimport './App.css';\nimport { People } from './people.js';\nimport './index.css';\nimport { useState } from 'react';\nvar options = {\n  month: 'long'\n};\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bday-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Birthday Reminder App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading3\",\n      children: \"Today's Birthdays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Birthdays, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nconst [list, setList] = useState(' ');\n\nconst ClickHandler = () => {\n  setList('Birthdays cleared');\n};\n\n_c2 = ClickHandler;\n\nconst Birthdays = () => {\n  for (let person = 0; person < People.length; person++) {\n    if (thisDay === People[person].birthday && thisMonth === People[person].birthmonth) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"person-img\",\n          src: People[person].image.default,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"person-name\",\n          children: People[person].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"person-age\",\n          children: [thisYear - People[person].birthyear, \" years old\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: ClickHandler,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No birthdays today\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}; // const ClickHandler = () => {\n// \tconst [Birthdays, setBirthdays] = useState(Birthdays);\n// \tsetBirthdays('Birthdays cleared');\n// };\n\n\n_c3 = Birthdays;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ClickHandler\");\n$RefreshReg$(_c3, \"Birthdays\");","map":{"version":3,"sources":["/Users/MarissaGvozdenovich/birthday-reminder/src/App.js"],"names":["People","useState","options","month","thisDay","Date","getDate","thisMonth","Intl","DateTimeFormat","format","thisYear","getFullYear","App","list","setList","ClickHandler","Birthdays","person","length","birthday","birthmonth","image","default","name","birthyear"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAIC,OAAO,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAd;AACA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiD,IAAIL,IAAJ,EAAjD,CAAhB;AACA,IAAIM,QAAQ,GAAG,IAAIN,IAAJ,GAAWO,WAAX,EAAf;;AAEA,SAASC,GAAT,GAAe;AACd,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;KATQA,G;AAUT,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,GAAD,CAAhC;;AACA,MAAMe,YAAY,GAAG,MAAM;AAC1BD,EAAAA,OAAO,CAAC,mBAAD,CAAP;AACA,CAFD;;MAAMC,Y;;AAIN,MAAMC,SAAS,GAAG,MAAM;AACvB,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGlB,MAAM,CAACmB,MAArC,EAA6CD,MAAM,EAAnD,EAAuD;AACtD,QACCd,OAAO,KAAKJ,MAAM,CAACkB,MAAD,CAAN,CAAeE,QAA3B,IACAb,SAAS,KAAKP,MAAM,CAACkB,MAAD,CAAN,CAAeG,UAF9B,EAGE;AACD,0BACC;AAAA,gCACC;AACC,UAAA,SAAS,EAAC,YADX;AAEC,UAAA,GAAG,EAAErB,MAAM,CAACkB,MAAD,CAAN,CAAeI,KAAf,CAAqBC,OAF3B;AAGC,UAAA,GAAG,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BvB,MAAM,CAACkB,MAAD,CAAN,CAAeM;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,qBACEb,QAAQ,GAAGX,MAAM,CAACkB,MAAD,CAAN,CAAeO,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPD,eAUC;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAET,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD;AAAA,sBADD;AAgBA;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAzBD,C,CA2BA;AACA;AACA;AACA;;;MA9BMC,S;AAgCN,eAAeJ,GAAf","sourcesContent":["import './App.css';\nimport { People } from './people.js';\nimport './index.css';\nimport { useState } from 'react';\n\nvar options = { month: 'long' };\nlet thisDay = new Date().getDate();\nlet thisMonth = new Intl.DateTimeFormat('en-US', options).format(new Date());\nlet thisYear = new Date().getFullYear();\n\nfunction App() {\n\treturn (\n\t\t<div className='bday-box'>\n\t\t\t<h1 className='app-title'>Birthday Reminder App</h1>\n\t\t\t<h3 className='heading3'>Today's Birthdays</h3>\n\t\t\t<hr></hr>\n\t\t\t<Birthdays />\n\t\t</div>\n\t);\n}\nconst [list, setList] = useState(' ');\nconst ClickHandler = () => {\n\tsetList('Birthdays cleared');\n};\n\nconst Birthdays = () => {\n\tfor (let person = 0; person < People.length; person++) {\n\t\tif (\n\t\t\tthisDay === People[person].birthday &&\n\t\t\tthisMonth === People[person].birthmonth\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='person-img'\n\t\t\t\t\t\tsrc={People[person].image.default}\n\t\t\t\t\t\talt=''\n\t\t\t\t\t/>\n\t\t\t\t\t<h4 className='person-name'>{People[person].name}</h4>\n\t\t\t\t\t<p className='person-age'>\n\t\t\t\t\t\t{thisYear - People[person].birthyear} years old\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className='btn' onClick={ClickHandler}>\n\t\t\t\t\t\tClear All\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t}\n\treturn <p>No birthdays today</p>;\n};\n\n// const ClickHandler = () => {\n// \tconst [Birthdays, setBirthdays] = useState(Birthdays);\n// \tsetBirthdays('Birthdays cleared');\n// };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}